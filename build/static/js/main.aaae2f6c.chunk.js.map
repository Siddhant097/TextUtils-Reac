{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","_jsx","className","concat","mode","children","_jsxs","type","id","href","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","_Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","console","log","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","split","join","length","defaultProps","title","aboutText","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode"],"mappings":"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","file":"static/js/main.aaae2f6c.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n// import { Link } from 'react-router-dom';\n\nexport default function Navbar(props) {\n    return (\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n            <div className=\"container-fluid\">\n                {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                    <li className=\"nav-item\">\n          {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/home\">Home</Link> */}\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\n\n        </li>\n        {/* <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\n </li> */}\n                    </ul>\n                    {/* <form className=\"d-flex\">\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n                        <button cla\n                        ssName=\"btn btn-primary\" type=\"submit\">Search</button>\n                    </form> */}\n                    <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\n                    </div>\n                </div>\n            </div>\n        </nav>\n    )\n}\n\nNavbar.propTypes = {\n    title: PropTypes.string.isRequired,\n    aboutText: PropTypes.string.isRequired\n}\n\nNavbar.defaultProps = {\n    title: 'Set title here',\n    aboutText: 'About'\n  };","import React, {useState} from 'react'\n\n\nexport default function TextForm(props) {\n    const handleUpClick = ()=>{\n        // console.log(\"Uppercase was clicked: \" +  text);\n        let newText = text.toUpperCase();\n        setText(newText)\n        props.showAlert(\"Converted to uppercase!\", \"success\");\n    }\n\n    const handleLoClick = ()=>{ \n        let newText = text.toLowerCase();\n        setText(newText)\n        props.showAlert(\"Converted to lowercase!\", \"success\");\n    }\n\n    const handleClearClick = ()=>{ \n        let newText = '';\n        setText(newText);\n        props.showAlert(\"Text Cleared!\", \"success\");\n    }\n\n    const handleOnChange = (event)=>{\n        // console.log(\"On change\");\n        setText(event.target.value) \n    }\n\n    // Credits: A\n    const handleCopy = () => {\n        console.log(\"I am copy\");\n        var text = document.getElementById(\"myBox\");\n        text.select();\n        text.setSelectionRange(0, 9999);\n        navigator.clipboard.writeText(text.value);\n        props.showAlert(\"Copied to Clipboard!\", \"success\");\n    }\n\n    // Credits: Coding Wala\n    const handleExtraSpaces = () => {\n        let newText = text.split(/[ ]+/);\n        setText(newText.join(\" \"));\n        props.showAlert(\"Extra spaces removed!\", \"success\");\n    }\n\n    const [text, setText] = useState(''); \n    // text = \"new text\"; // Wrong way to change the state\n    // setText(\"new text\"); // Correct way to change the state\n    return (\n        <>\n        <div className=\"container\" style={{color: props.mode==='dark'?'white':'#042743'}}> \n            <h1>{props.heading}</h1>\n            <div className=\"mb-3\"> \n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'grey':'white', color: props.mode==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"8\"></textarea>\n            </div>\n            <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to Uppercase</button>\n            <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>Convert to Lowercase</button>\n            <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>Clear Text</button>\n            <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>Copy Text</button>\n            <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\n        </div>\n        <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'#042743'}}>\n            <h2>Your text summary</h2>\n            <p>{text.split(\" \").length} words and {text.length} characters</p>\n            <p>{0.008 *  text.split(\" \").length} Minutes read</p>\n            <h2>Preview</h2>\n            <p>{text.length>0?text:\"Enter something in the textbox above to preview it here\"}</p>\n        </div>\n        </>\n    )\n}\n","import React from 'react'\n\nfunction Alert(props) {\n    const capitalize = (word)=>{\n        const lower = word.toLowerCase();\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\n    }\n    return (\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n           <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg} \n        </div>\n    )\n}\n\nexport default Alert\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n \nfunction App() {\n  const [mode, setMode] = useState('light'); // Whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n      setAlert({\n        msg: message,\n        type: type\n      })\n      setTimeout(() => {\n          setAlert(null);\n      }, 1500);\n  }\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = 'TextUtils - Dark Mode';\n      // setInterval(() => {\n      //   document.title = 'TextUtils is Amazing Mode';\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = 'Install TextUtils Now';\n      // }, 1500);\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title = 'TextUtils - Light Mode';\n    }\n  }\n  return (\n    <>\n    {/* <Router> */}\n      \n\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n               \n          {/* <Routes>\n            <Route exact path=\"/about\" element={<About/>} >\n\n            {/* </Route> */}\n\n            {/* <Route exact path=\"/home\"} */}\n             {/* element={ */}\n              <TextForm showAlert={showAlert} heading=\"Enter your text to Analyse below\" mode={mode}/>\n\n            {/* </Route> */}\n          {/* </Routes> */} \n\n\n      </div>\n\n\n      {/* </Router> */}\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}